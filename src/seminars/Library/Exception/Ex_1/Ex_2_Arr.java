package Library.Exception.Ex_1;
/*
*
Реализуйте метод, принимающий в качестве аргумента целочисленный массив и некоторое значение.
Метод ищет в массиве заданное значение и возвращает его индекс. При этом, например:
если длина массива меньше некоторого заданного минимума, метод возвращает -1, в качестве кода ошибки.
если искомый элемент не найден, метод вернет -2 в качестве кода ошибки.
если вместо массива пришел null, метод вернет -3
придумайте свои варианты исключительных ситуаций и верните соответствующие коды ошибок.
Напишите метод, в котором реализуйте взаимодействие с пользователем.
То есть, этот метод запросит искомое число у пользователя, вызовет первый, обработает возвращенное значение и покажет читаемый результат пользователю. Например, если вернулся -2, пользователю выведется сообщение: “Искомый элемент не найден”.
* */
public class Ex_2_Arr {
    public static void main(String[] args) {
        int[] myArray = {1, 3, 4, 6, 7, 8};
//        int[] myArray1 = new int[]{1, 3, 4, 6, 7, 8};
        int num = 7;
        System.out.println(muArr(myArray, num));
//        System.out.println(muArr(new int[]{1, 3, 4, 6, 7, 8}, num));



        // первый способ
        int[] test;
        test = null;
        System.out.println(muArr(test, num));

        // второй способ
        System.out.println(muArr(new int[]{}, num));  // new int[]{} - null !!!!!

    }

    public static int muArr(int[] array, int num) {
        int minSize = 5;
        // сначала делаем проверки после делаем ФОР
        if (array == null) return -3; //если пользователь передал пустой массив
        if (num < 0) return -4; // если пользователь передал отрицательное значение
        if (array.length < minSize) return -1;


        for (int i = 0; i < array.length; i++) {
            if (array[i] == num)
                return i;
        }
        return -2;
    }
}
